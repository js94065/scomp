package scomp;

import java_cup.runtime.*;

terminal BOOLEAN, BREAK, CALLOUT, CLASS, CONTINUE, ELSE, IF, INT, RETURN, VOID, WHILE;
terminal LEFT_PARENTHESIS, RIGHT_PARENTHESIS, LEFT_BRACE, RIGHT_BRACE, LEFT_BRACKET, RIGHT_BRACKET;
terminal COMMA, SEMI_COLON, NOT, PLUS, MINUS, TIMES, DIVIDE, MODULO;
terminal ARITHMETIC_SHIFT_LEFT, ARITHMETIC_SHIFT_RIGHT, BITWISE_ROTATE_RIGHT;
terminal LESSER, GREATER, LESSER_OR_EQUAL, GREATER_OR_EQUAL, EQUAL, NOT_EQUAL, AND, OR;
terminal int INT_LITERAL;
terminal boolean BOOLEAN_LITERAL;
terminal char CHAR_LITERAL;
terminal String STRING_LITERAL;
terminal String IDENTIFIER;

non terminal Program;
non terminal FieldDeclarations, FieldDeclaration;
non terminal Fields, Field;
non terminal MethodDeclarations, MethodDeclaration;
non terminal Variables, Variable;
non terminal VariableDeclarations, VariableDeclaration;
non terminal Statements, Statement;
non terminal Block;
non terminal Type;

Program ::=
	CLASS IDENTIFIER LEFT_BRACE RIGHT_BRACE
	|
	CLASS IDENTIFIER LEFT_BRACE FieldDeclarations RIGHT_BRACE
	|
	CLASS IDENTIFIER LEFT_BRACE MethodDeclarations RIGHT_BRACE
	|
	CLASS IDENTIFIER LEFT_BRACE FieldDeclarations MethodDeclarations RIGHT_BRACE
	;

FieldDeclarations ::=
	FieldDeclarations FieldDeclaration
	|
	FieldDeclaration
	;

FieldDeclaration ::=
	Type Fields SEMI_COLON
	;

Fields ::=
	Fields COMMA Field
	|
	Field
	;

Field ::=
	IDENTIFIER
	|
	IDENTIFIER LEFT_BRACKET INT_LITERAL RIGHT_BRACKET
	;

MethodDeclarations ::=
	MethodDeclarations MethodDeclaration
	|
	MethodDeclaration
	;

MethodDeclaration ::=
	Type IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS Block
	|
	VOID IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS Block
	|
	Type IDENTIFIER LEFT_PARENTHESIS Variables RIGHT_PARENTHESIS Block
	|
	VOID IDENTIFIER LEFT_PARENTHESIS Variables RIGHT_PARENTHESIS Block
	;
	
Variables ::= 
	Variable
	|
	Variables COMMA Variable
	;
	
Variable ::=
	Type IDENTIFIER;

Block ::=
	LEFT_BRACE RIGHT_BRACE
	|
	LEFT_BRACE VariableDeclarations RIGHT_BRACE
	|
	LEFT_BRACE Statements RIGHT_BRACE
	|
	LEFT_BRACE VariableDeclarations Statements RIGHT_BRACE
	;
	
VariableDeclarations ::=
	Type VariableDeclaration SEMI_COLON;

VariableDeclaration ::=
	IDENTIFIER
	|
	VariableDeclaration COMMA IDENTIFIER
	;

Statements ::=
	Statement
	|
	Statements Statement
	;

Statement ::=

	BREAK SEMI_COLON
	|
	CONTINUE SEMI_COLON
	|
	Block
	;
	
	
Type ::=
	INT
	|
	BOOLEAN
	;
